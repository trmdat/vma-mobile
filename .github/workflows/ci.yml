name: Build and release

on:
  push:
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+"

env:
  VMA_ENV_FILE: .env.production

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    permissions: write-all

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up flutter SDK
        uses: flutter-actions/setup-flutter@v3
        with:
          channel: stabel
          version: 3.24.1

      - name: Set up Java 21
        uses: actions/setup-java@v4
        with:
          java-version: "21"
          distribution: "temurin"

      - name: Install dependencies
        run: flutter pub get

      - name: Extract version
        id: extract_version
        uses: battila7/get-version-action@v2

      - name: Decrypt keystore
        run: gpg --quiet --batch --yes --decrypt --passphrase="${{ secrets.VMA_KEYSTORE_PASSPHRASE }}" --output android/vma2024.keystore android/vma2024.keystore.gpg

      - name: Copy keystore properties
        run: |
          echo "storePassword=${{ secrets.VMA_STORE_PASSWORD }}" >> android/key.properties &&
          echo "keyPassword=${{ secrets.VMA_STORE_PASSWORD }}" >> android/key.properties &&
          echo "keyAlias=${{ secrets.VMA_KEY_ALIAS }}" >> android/key.properties &&
          echo "storeFile=$GITHUB_WORKSPACE/android/vma2024.keystore" >> android/key.properties

      - name: Prepare environment file
        run: |
          echo {{ secrets.VMA_ENV }} > {{ env.VMA_ENV_FILE }}

      - name: Build appbundle
        run: flutter build appbundle --dart-define-from-file={{ env.VMA_ENV_FILE }} --release --build-name=${{ steps.extract_version.outputs.version-without-v }}

      - name: Build apk
        run: flutter build apk --dart-define-from-file={{ env.VMA_ENV_FILE }} --release --build-name=${{ steps.extract_version.outputs.version-without-v }}

      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: "${{ steps.extract_version.outputs.version }}"
          release_name: "${{ steps.extract_version.outputs.version }}"
          body: "Release of version ${{ steps.extract_version.outputs.version }}"
          draft: false
          prerelease: false

      - name: Upload aab asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: build/app/outputs/bundle/release/app-release.aab
          asset_name: vma-${{ steps.extract_version.outputs.version }}.aab
          asset_content_type: application/vnd.android.package.archive

      - name: Upload apk asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: build/app/outputs/flutter-apk/app-release.apk
          asset_name: vma-${{ steps.extract_version.outputs.version }}.apk
          asset_content_type: application/vnd.android.package.archive
