name: Build and release

on:
  push:
    tags:
      - 'v[0-9]+(\.[0-9]+){2}'

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    permissions: write-all

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up flutter SDK
        uses: flutter-actions/setup-flutter@v3
        with:
          channel: stabel
          version: 3.24.1

      - name: Install dependencies
        run: flutter pub get

      - name: Prepare keystore location
        run: mkdir -p ${{ secrets.VMA_KEYSTORE_PATH }}

      - name: Decode keystore content
        run: echo "${{ secrets.VMA_KEYSTORE }}" | base64 --decode > ${{ secrets.VMA_KEYSTORE_PATH }}/${{ secrets.VMA_KEYSTORE_NAME }}

      - name: Copy keystore properties
        run: |
          echo "storePassword=${{ secrets.VMA_STORE_PASSWORD }}" > android/key.properties &&
          echo "keyPassword=${{ secrets.VMA_STORE_PASSWORD }}" > android/key.properties &&
          echo "keyAlias=${{ secrets.VMA_KEY_ALIAS }}" > android/key.properties &&
          echo "storeFile=${{ secrets.VMA_KEYSTORE_PATH }}/${{ secrets.VMA_KEYSTORE_NAME }}" > android/key.properties

      - name: Build
        run: flutter build appbundle --release

      - name: Clean keystore file
        run: rm -rf ${{ secrets.VMA_KEYSTORE_PATH }}

      - name: Extract version
        id: extract_version
        uses: battila7/get-version-action@v2

      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: "${{ steps.extract_version.outputs.version }}"
          release_name: "${{ steps.extract_version.outputs.version }}"
          body: "Release of version ${{ steps.extract_version.outputs.version }}"
          draft: false
          prerelease: false

      - name: Upload release asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: build/app/outputs/bundle/release/app-release.aab
          asset_name: vma-${{ steps.extract_version.outputs.version }}.aab
          asset_content_type: application/vnd.android.package.archive
